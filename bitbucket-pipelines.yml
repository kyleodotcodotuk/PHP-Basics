# Installation ---
# 1. In Bitbucket, add $FTP_USERNAME $FTP_PASSWORD and $FTP_HOST as environment variables.
# 2. Commit this file to your repo
# 3. From Bitbucket Cloud > Commits > Commit Number > Run Pipeline > Custom:Init (this will
#    push everything and initial GitFTP)
#
# Usage ---
# - On each commit to master branch, it'll push all files to the $FTP_HOST
# - You also have the option to 'init' (from Bitbucket Cloud) - pushes everything and initialises
# - Finally you can also 'deploy-all' (from Bitbucket Cloud) - if multiple deploys fail, you
#   can deploy everything to "catch up"
#
image: underscores/docker-php-composer-node

pipelines:
  # Pipelines that are triggered manually via the Bitbucket GUI
  custom:
    init-prod:
      - step:
          name: Production Initial Deploy
          script:
            - apt-get update && apt-get install -y unzip
            - git ftp init -u "$FTP_USERNAME" -p "$FTP_PASSWORD" $FTP_HOST/$FTP_DIR

    deploy-all:
      - step:
          name: Deploying All to Live
          script:
            - apt-get update && apt-get install -y unzip
            - git ftp push -u "$FTP_USERNAME" -p "$FTP_PASSWORD" $FTP_HOST/$FTP_DIR --all

  # Automated triggers on commits to branches
  branches:
    master:
      - step:
          deployment: production
          name: Deploying changes to Live Site
          script:
            - apt-get update && apt-get install -y unzip
            - git ftp push -u "$FTP_USERNAME" -p "$FTP_PASSWORD" $FTP_HOST/$FTP_DIR
